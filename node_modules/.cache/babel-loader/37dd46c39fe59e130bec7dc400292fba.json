{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\nimport React, { Component } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nconst localizer = momentLocalizer(moment);\nexport class MyCalendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.handleSelect = e => {\n      console.log(e);\n      const title = window.prompt('New Event name');\n\n      if (title) {// console.log(title)\n        // const eventData = {\n        //   'title': title,\n        //   'allDay': true,\n        //   'start': '',\n        //   'end': ''\n        // }\n        // this.setState({\n        //   eventObj: eventData\n        // })\n      }\n    };\n\n    this.ColoredDateCellWrapper = ({\n      children\n    }) => {\n      debugger;\n      console.log(React.cloneElement(React.Children.only(children))); // React.cloneElement(React.Children.only(children), {\n      //   style: {\n      //     backgroundColor: 'lightblue',\n      //   },\n      // })\n    };\n\n    this.state = {\n      eventObj: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      selectable: true,\n      localizer: localizer,\n      events: [{\n        'title': 'Long Event',\n        'start': new Date(2020, 4, 7),\n        'end': new Date(2020, 4, 10)\n      }],\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectSlot: this.handleSelect,\n      showMultiDayTimes: true,\n      components: {\n        timeSlotWrapper: this.ColoredDateCellWrapper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","Component","Calendar","momentLocalizer","moment","localizer","MyCalendar","constructor","props","state","handleSelect","e","console","log","title","window","prompt","ColoredDateCellWrapper","children","cloneElement","Children","only","eventObj","render","Date","height","timeSlotWrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC;AAEA,OAAO,MAAME,UAAN,SAAyBL,SAAzB,CAAmC;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,KAPmB,GAOX,EAPW;;AAAA,SAQnBC,YARmB,GAQHC,CAAD,IAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,YAAMG,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;;AACA,UAAIF,KAAJ,EAAW,CACV;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAEF,KAxBkB;;AAAA,SAyBnBG,sBAzBmB,GAyBM,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACxC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACmB,YAAN,CAAmBnB,KAAK,CAACoB,QAAN,CAAeC,IAAf,CAAoBH,QAApB,CAAnB,CAAZ,EAFwC,CAGxC;AACA;AACA;AACA;AACA;AACD,KAjCkB;;AAEjB,SAAKT,KAAL,GAAa;AACTa,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AA8BCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAElB,SAFb;AAGE,MAAA,MAAM,EAAE,CACN;AACE,iBAAS,YADX;AAEE,iBAAS,IAAImB,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFX;AAGE,eAAO,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHT,OADM,CAHV;AAUE,MAAA,aAAa,EAAC,OAVhB;AAWE,MAAA,WAAW,EAAC,KAXd;AAYE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAZT;AAaE,MAAA,YAAY,EAAE,KAAKf,YAbrB;AAeE,MAAA,iBAAiB,MAfnB;AAgBE,MAAA,UAAU,EAAE;AACVgB,QAAAA,eAAe,EAAE,KAAKT;AADZ,OAhBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAwBD;;AA7DuC;AAiE1C,eAAeX,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment)\n\nexport class MyCalendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        eventObj: {}\n    };\n}\n\n  state = {}\n  handleSelect = (e) => {\n    console.log(e)\n    const title = window.prompt('New Event name')\n    if (title) {\n     // console.log(title)\n      // const eventData = {\n      //   'title': title,\n      //   'allDay': true,\n      //   'start': '',\n      //   'end': ''\n      // }\n      // this.setState({\n      //   eventObj: eventData\n      // })\n    }\n\n  }\n  ColoredDateCellWrapper = ({ children }) =>{\n    debugger\n    console.log(React.cloneElement(React.Children.only(children)))\n    // React.cloneElement(React.Children.only(children), {\n    //   style: {\n    //     backgroundColor: 'lightblue',\n    //   },\n    // })\n  }\n  \n  render() {\n    return (\n      <div>\n        <Calendar\n          selectable\n          localizer={localizer}\n          events={[\n            {\n              'title': 'Long Event',\n              'start': new Date(2020, 4, 7),\n              'end': new Date(2020, 4, 10)\n            }\n          ]}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500 }}\n          onSelectSlot={this.handleSelect}\n\n          showMultiDayTimes\n          components={{\n            timeSlotWrapper: this.ColoredDateCellWrapper,\n          }}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}