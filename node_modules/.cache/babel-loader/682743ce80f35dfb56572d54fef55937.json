{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\nimport React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({\n  children\n}) => {\n  debugger;\n  console.log(children);\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue'\n    }\n  });\n};\n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events);\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState('');\n  const [startEvent, setStart] = useState('');\n  const [endEvent, setEnd] = useState('');\n\n  const toggle = () => {\n    return setModal(!modal);\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n      console.log('name: ', name);\n    } else if (e.target.name === 'start') {\n      setStart(e.target.value);\n      console.log('start: ', e.target.value);\n    } else {\n      setEnd(e.target.value);\n      console.log('end: ', endEvent);\n    }\n  };\n\n  const handleSelect = ({\n    start,\n    end\n  }) => {\n    debugger;\n    setStart(start);\n    setEnd(end);\n    toggle();\n  };\n\n  const createEvent = () => {\n    debugger;\n    const start = startEvent;\n    const end = endEvent;\n    const title = name;\n    if (name) setevent([...event, {\n      start,\n      end,\n      title\n    }]);\n    toggle();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    events: event,\n    views: allViews,\n    step: 60,\n    showMultiDayTimes: true,\n    max: dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours'),\n    defaultDate: new Date(2020, 3, 1),\n    components: {\n      timeSlotWrapper: ColoredDateCellWrapper\n    },\n    localizer: localizer,\n    style: {\n      height: 500\n    },\n    selectable: true,\n    onSelectEvent: event => alert(event.title),\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"eventName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Event Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"eventName\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: createEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","useState","Calendar","Views","momentLocalizer","moment","events","dates","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","allViews","Object","keys","map","k","localizer","ColoredDateCellWrapper","children","console","log","cloneElement","Children","only","style","backgroundColor","MyCalendar","event","setevent","modal","setModal","name","setName","startEvent","setStart","endEvent","setEnd","toggle","handleChange","e","target","value","handleSelect","start","end","createEvent","title","add","endOf","Date","timeSlotWrapper","height","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport events from './events'\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst localizer = momentLocalizer(moment)\n\nconst ColoredDateCellWrapper = ({ children }) =>{\ndebugger\n  console.log(children)\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })}\n\n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events)\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState('');\n  const [startEvent, setStart] = useState('');\n  const [endEvent, setEnd] = useState('');\n\n  const toggle = () => {\n    return (\n      setModal(!modal)\n    )\n  }\n\n  const handleChange = (e) => {\n    if (e.target.name === 'name') {\n      setName(e.target.value)\n      console.log('name: ', name);\n    }\n    else if (e.target.name === 'start') {\n      setStart(e.target.value)\n      console.log('start: ', e.target.value);\n    }\n    else {\n      setEnd(e.target.value)\n      console.log('end: ', endEvent);\n\n    }\n  }\n\n  const handleSelect = ({ start, end }) => {\n    debugger\n    setStart(start)\n    setEnd(end)\n    toggle()\n  }\n\n  const createEvent = () => {\n    debugger\n    const start = startEvent;\n    const end = endEvent;\n    const title = name\n    if (name)\n      setevent([\n        ...event,\n        {\n          start,\n          end,\n          title\n        }\n      ],\n      )\n    toggle()\n  }\n\n  return (\n    <div>\n      <Calendar\n        events={event}\n        views={allViews}\n        step={60}\n        showMultiDayTimes\n        max={dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours')}\n        defaultDate={new Date(2020, 3, 1)}\n        components={{\n          timeSlotWrapper: ColoredDateCellWrapper,\n        }}\n        localizer={localizer}\n        style={{ height: 500 }}\n\n        selectable={true}\n        onSelectEvent={event => alert(event.title)}\n        onSelectSlot={handleSelect}\n      />\n      <Modal isOpen={modal} toggle={toggle} className=\"a\">\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"eventName\">Event Name</Label>\n              <Input type=\"text\" name=\"name\" id=\"eventName\" onChange={handleChange} />\n            </FormGroup>\n            {/* <FormGroup>\n              <Label for=\"eventStart\">Start</Label>\n              <Input type=\"date\" name=\"start\" id=\"eventStart\" onChange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"eventEnd\">End</Label>\n              <Input type=\"date\" name=\"end\" id=\"eventEnd\" onChange={handleChange}/>\n            </FormGroup> */}\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={createEvent}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\n\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}