{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/Employee.js\";\nimport { CardBody, Card, Row, Col } from 'reactstrap';\nimport data from './employee_database.json';\nimport axios from 'axios';\nimport './Employee.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport React, { Component } from 'react';\nexport default class Employee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Users: [],\n      initial: '',\n      firstname: '',\n      lastname: ''\n    };\n  }\n\n  getUsersData() {\n    axios.get(`./employee_database.json`, {}).then(res => {\n      const data = res.data;\n      console.log(data);\n      const users = data.map(u => {\n        this.state.firstname = data.name.split(' ');\n        console.log(this.state.firstname);\n        this.state.firstname = this.state.firstname.slice(0, 1);\n        this.state.lastname = this.state.lastname.slice(0, 1);\n        this.state.initial = this.state.firstname + this.state.lastname;\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        key: data.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"employee-detail text-center \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, data.url ? /*#__PURE__*/React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + data.url,\n        alt: data.name,\n        className: \"rounded-circle img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }) : /*#__PURE__*/React.createElement(\"p\", {\n        className: \"initials rounded-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 144\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 183\n        }\n      }, this.state.initial)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        style: {\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, data.jobTitle)))));\n      this.setState({\n        users\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getUsersData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"top-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Employee directory\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      name: \"search\",\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      className: \"search-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(Card, {\n      className: \"employee-directory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justufy-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, this.state.users))));\n  }\n\n} // const Employee = (props) => {\n//     //--------------axios-------------------\n//    // -------initial of name ----------\n//     const newData = data.map((data , i) => {\n//         let [firstname, lastname] = data.name.split(\" \")\n//         firstname=firstname.slice(0,1)\n//         lastname=lastname.slice(0,1)\n//         let initial = firstname+lastname \n//         return (\n//     <Col lg='3' key={data.id}>\n//         <div className='employee-detail text-center '>\n//             <CardBody className='text-center'>\n// {data.url?<img src={process.env.PUBLIC_URL+ data.url} alt={data.name} className='rounded-circle img-fluid'></img> : <p className='initials rounded-circle'><b>{initial}</b></p>}\n//                 <p className='my-1'>{data.name}</p>\n//                 <p className='mb-0' style={{ fontSize: 14 }}>{data.jobTitle}</p>\n//             </CardBody>\n//         </div>\n//     </Col>\n//         )\n//     });\n//     return (\n//         <div>\n//             <Card className='top-bar'>\n//                 <CardBody>\n//                     <div className='d-flex justify-content-between'>\n//                         <h5>Employee directory</h5>\n//                         <span>\n//                             <input type='search' name='search' className='search' ></input>\n//                             <FontAwesomeIcon icon={faSearch} className='search-icon'></FontAwesomeIcon>\n//                         </span>\n//                     </div>\n//                 </CardBody>\n//             </Card>\n//             <Card className='employee-directory'>\n//                 <CardBody>\n//                     <Row className='justufy-content-between'>\n//                         {newData}\n//                     </Row>\n//                 </CardBody>\n//             </Card>\n//         </div>\n//     )\n// }\n// export default Employee;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/Employee.js"],"names":["CardBody","Card","Row","Col","data","axios","FontAwesomeIcon","faSearch","React","Component","Employee","constructor","props","state","Users","initial","firstname","lastname","getUsersData","get","then","res","console","log","users","map","u","name","split","slice","id","url","process","env","PUBLIC_URL","fontSize","jobTitle","setState","catch","error","componentDidMount","render"],"mappings":"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","sourcesContent":["import {\n    CardBody,\n    Card,\n    Row,\n    Col\n} from 'reactstrap';\nimport data from './employee_database.json'\nimport axios from 'axios'\nimport './Employee.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\n\n\nimport React, { Component } from 'react'\n\nexport default class Employee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Users: [],\n            initial: '',\n            firstname:'',\n            lastname:''\n        };\n    }\n\n    getUsersData() {\n        axios\n            .get(`./employee_database.json`, {})\n            .then(res => {\n                const data = res.data\n                console.log(data)\n                \n                const users = data.map(u =>\n                 {this.state.firstname=data.name.split(' ')\n                 console.log(this.state.firstname)\n                 this.state.firstname = this.state.firstname.slice(0,1)\n                 this.state.lastname = this.state.lastname.slice(0,1)\n                 this.state.initial=this.state.firstname + this.state.lastname},\n                < Col lg = '3' key = { data.id } >\n                <div className='employee-detail text-center '>\n\n                    <CardBody className='text-center'>\n                        {data.url ? <img src={process.env.PUBLIC_URL + data.url} alt={data.name} className='rounded-circle img-fluid'></img> : <p className='initials rounded-circle'><b>{this.state.initial}</b></p>}\n                        <p className='my-1'>{data.name}</p>\n                        <p className='mb-0' style={{ fontSize: 14 }}>{data.jobTitle}</p>\n                    </CardBody>\n\n                </div>\n                    </Col >\n                )\n\n        this.setState({\n            users\n        })\n\n    })\n            .catch((error) => {\n    console.log(error)\n})\n\n    }\ncomponentDidMount() {\n    this.getUsersData()\n}\n\n\nrender() {\n    return (\n        <div>\n            <Card className='top-bar'>\n                <CardBody>\n                    <div className='d-flex justify-content-between'>\n                        <h5>Employee directory</h5>\n                        <span>\n                            <input type='search' name='search' className='search' ></input>\n                            <FontAwesomeIcon icon={faSearch} className='search-icon'></FontAwesomeIcon>\n                        </span>\n                    </div>\n                </CardBody>\n            </Card>\n            <Card className='employee-directory'>\n                <CardBody>\n                    <Row className='justufy-content-between'>\n                        {this.state.users}\n                    </Row>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\n}\n\n// const Employee = (props) => {\n\n//     //--------------axios-------------------\n\n\n\n\n//    // -------initial of name ----------\n//     const newData = data.map((data , i) => {\n//         let [firstname, lastname] = data.name.split(\" \")\n//         firstname=firstname.slice(0,1)\n//         lastname=lastname.slice(0,1)\n//         let initial = firstname+lastname \n\n\n//         return (\n        //     <Col lg='3' key={data.id}>\n        //         <div className='employee-detail text-center '>\n\n        //             <CardBody className='text-center'>\n        // {data.url?<img src={process.env.PUBLIC_URL+ data.url} alt={data.name} className='rounded-circle img-fluid'></img> : <p className='initials rounded-circle'><b>{initial}</b></p>}\n        //                 <p className='my-1'>{data.name}</p>\n        //                 <p className='mb-0' style={{ fontSize: 14 }}>{data.jobTitle}</p>\n        //             </CardBody>\n\n        //         </div>\n        //     </Col>\n//         )\n//     });\n//     return (\n//         <div>\n//             <Card className='top-bar'>\n//                 <CardBody>\n//                     <div className='d-flex justify-content-between'>\n//                         <h5>Employee directory</h5>\n//                         <span>\n//                             <input type='search' name='search' className='search' ></input>\n//                             <FontAwesomeIcon icon={faSearch} className='search-icon'></FontAwesomeIcon>\n//                         </span>\n//                     </div>\n//                 </CardBody>\n//             </Card>\n//             <Card className='employee-directory'>\n//                 <CardBody>\n//                     <Row className='justufy-content-between'>\n//                         {newData}\n//                     </Row>\n//                 </CardBody>\n//             </Card>\n//         </div>\n//     )\n\n// }\n\n// export default Employee;\n"]},"metadata":{},"sourceType":"module"}