{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\nimport React, { Component } from 'react';\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nconst localizer = momentLocalizer(moment);\nexport class MyCalendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = e => {\n      console.log(e);\n      const title = window.prompt('New Event name');\n\n      if (title) {\n        // console.log(title)\n        const eventData = {\n          'title': title,\n          'allDay': true,\n          'start': '',\n          'end': '',\n          'action': ''\n        };\n        this.setState({\n          eventObj: eventData\n        });\n      }\n    };\n\n    this.ColoredDateCellWrapper = ({\n      children\n    }) => {\n      debugger;\n      console.log(React.cloneElement(React.Children.only(children))); // React.cloneElement(React.Children.only(children), {\n      //   style: {\n      //     backgroundColor: 'lightblue',\n      //   },\n      // })\n    };\n\n    this.state = {\n      eventObj: {}\n    };\n  }\n\n  render() {\n    const allViews = Object.keys(Views).map(k => Views[k]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      selectable: true,\n      localizer: localizer,\n      events: [{\n        'title': 'Long Event',\n        'start': new Date(2020, 4, 7),\n        'end': new Date(2020, 4, 10)\n      }],\n      views: allViews,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectSlot: this.handleSelect,\n      showMultiDayTimes: true,\n      components: {\n        timeSlotWrapper: this.ColoredDateCellWrapper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","Component","Calendar","momentLocalizer","Views","moment","localizer","MyCalendar","constructor","props","handleSelect","e","console","log","title","window","prompt","eventData","setState","eventObj","ColoredDateCellWrapper","children","cloneElement","Children","only","state","render","allViews","Object","keys","map","k","Date","height","timeSlotWrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGH,eAAe,CAACE,MAAD,CAAjC;AAEA,OAAO,MAAME,UAAN,SAAyBN,SAAzB,CAAmC;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOHC,CAAD,IAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,YAAMG,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACV;AACC,cAAMG,SAAS,GAAG;AAChB,mBAASH,KADO;AAEhB,oBAAU,IAFM;AAGhB,mBAAS,EAHO;AAIhB,iBAAO,EAJS;AAKhB,oBAAU;AALM,SAAlB;AAOA,aAAKI,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAEF;AADE,SAAd;AAGD;AAEF,KAxBkB;;AAAA,SAyBnBG,sBAzBmB,GAyBM,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACxC;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACsB,YAAN,CAAmBtB,KAAK,CAACuB,QAAN,CAAeC,IAAf,CAAoBH,QAApB,CAAnB,CAAZ,EAFwC,CAGxC;AACA;AACA;AACA;AACA;AACD,KAjCkB;;AAEjB,SAAKI,KAAL,GAAa;AACTN,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AA6BCO,EAAAA,MAAM,GAAG;AACV,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYzB,KAAZ,EAAmB0B,GAAnB,CAAuBC,CAAC,IAAI3B,KAAK,CAAC2B,CAAD,CAAjC,CAAjB;AAEG,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAEzB,SAFb;AAGE,MAAA,MAAM,EAAE,CACN;AACE,iBAAS,YADX;AAEE,iBAAS,IAAI0B,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFX;AAGE,eAAO,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHT,OADM,CAHV;AAUE,MAAA,KAAK,EAAEL,QAVT;AAWE,MAAA,aAAa,EAAC,OAXhB;AAYE,MAAA,WAAW,EAAC,KAZd;AAaE,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAbT;AAcE,MAAA,YAAY,EAAE,KAAKvB,YAdrB;AAgBE,MAAA,iBAAiB,MAhBnB;AAiBE,MAAA,UAAU,EAAE;AACVwB,QAAAA,eAAe,EAAE,KAAKd;AADZ,OAjBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAyBD;;AA/DuC;AAmE1C,eAAeb,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Calendar, momentLocalizer , Views } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment)\n\nexport class MyCalendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        eventObj: {}\n    };\n}\n\n  handleSelect = (e) => {\n    console.log(e)\n    const title = window.prompt('New Event name')\n    if (title) {\n     // console.log(title)\n      const eventData = {\n        'title': title,\n        'allDay': true,\n        'start': '',\n        'end': '',\n        'action': ''  \n      }\n      this.setState({\n        eventObj: eventData\n      })\n    }\n\n  }\n  ColoredDateCellWrapper = ({ children }) =>{\n    debugger\n    console.log(React.cloneElement(React.Children.only(children)))\n    // React.cloneElement(React.Children.only(children), {\n    //   style: {\n    //     backgroundColor: 'lightblue',\n    //   },\n    // })\n  }\n  render() {\n const allViews = Object.keys(Views).map(k => Views[k])\n\n    return (\n      <div>\n        <Calendar\n          selectable\n          localizer={localizer}\n          events={[\n            {\n              'title': 'Long Event',\n              'start': new Date(2020, 4, 7),\n              'end': new Date(2020, 4, 10)\n            }\n          ]}\n          views={allViews}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500 }}\n          onSelectSlot={this.handleSelect}\n\n          showMultiDayTimes\n          components={{\n            timeSlotWrapper: this.ColoredDateCellWrapper,\n          }}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}