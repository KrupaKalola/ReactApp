{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\n// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// const localizer = momentLocalizer(moment)\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n// export default MyCalendar;\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\nimport React from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({\n  children\n}) => React.cloneElement(React.Children.only(children), {\n  style: {\n    backgroundColor: 'lightblue'\n  }\n});\n\nlet MyCalendar = () => {\n  const handleSelect = ({\n    start,\n    end\n  }) => {\n    const title = window.prompt('New Event name');\n    if (title) this.setState({\n      events: [...this.state.events, {\n        start,\n        end,\n        title\n      }]\n    });\n  };\n\n  /*#__PURE__*/\n  React.createElement(Calendar, {\n    events: events,\n    views: allViews,\n    step: 60,\n    showMultiDayTimes: true,\n    max: dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours'),\n    defaultDate: new Date(2020, 3, 1),\n    components: {\n      timeSlotWrapper: ColoredDateCellWrapper\n    },\n    localizer: localizer,\n    style: {\n      height: 500\n    },\n    selectable: true,\n    onSelectEvent: event => alert(event.title),\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","Calendar","Views","momentLocalizer","moment","events","dates","allViews","Object","keys","map","k","localizer","ColoredDateCellWrapper","children","cloneElement","Children","only","style","backgroundColor","MyCalendar","handleSelect","start","end","title","window","prompt","setState","state","add","endOf","Date","timeSlotWrapper","height","event","alert"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,eAA1B,QAAkD,oBAAlD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,oDAAvB;AACA,OAAO,mDAAP;AAGA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAuBC,CAAC,IAAIT,KAAK,CAACS,CAAD,CAAjC,CAAf;AAEA,MAAMC,SAAS,GAAGT,eAAe,CAACC,MAAD,CAAjC;;AAEA,MAAMS,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC7Bd,KAAK,CAACe,YAAN,CAAmBf,KAAK,CAACgB,QAAN,CAAeC,IAAf,CAAoBH,QAApB,CAAnB,EAAkD;AAChDI,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE;AADZ;AADyC,CAAlD,CADF;;AAQA,IAAIC,UAAU,GAAG,MAAM;AACrB,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAoB;AACvC,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;AACA,QAAIF,KAAJ,EACE,KAAKG,QAAL,CAAc;AACZtB,MAAAA,MAAM,EAAE,CACN,GAAG,KAAKuB,KAAL,CAAWvB,MADR,EAEN;AACEiB,QAAAA,KADF;AAEEC,QAAAA,GAFF;AAGEC,QAAAA;AAHF,OAFM;AADI,KAAd;AAUH,GAbD;;AAcA;AAAA,sBAAC,QAAD;AACE,IAAA,MAAM,EAAEnB,MADV;AAEE,IAAA,KAAK,EAAEE,QAFT;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,iBAAiB,MAJnB;AAKE,IAAA,GAAG,EAAED,KAAK,CAACuB,GAAN,CAAUvB,KAAK,CAACwB,KAAN,CAAY,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,KAAlC,CAAV,EAAoD,CAAC,CAArD,EAAwD,OAAxD,CALP;AAME,IAAA,WAAW,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CANf;AAOE,IAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAEnB;AADP,KAPd;AAUE,IAAA,SAAS,EAAED,SAVb;AAWE,IAAA,KAAK,EAAE;AAAEqB,MAAAA,MAAM,EAAE;AAAV,KAXT;AAaE,IAAA,UAAU,MAbZ;AAcE,IAAA,aAAa,EAAEC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACV,KAAP,CAd/B;AAeE,IAAA,YAAY,EAAEH,YAfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBC,CAhCH;;AAkCA,eAAeD,UAAf","sourcesContent":["// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment)\n\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\n\n// export default MyCalendar;\n\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\n\n\n\nimport React from 'react'\nimport { Calendar, Views, momentLocalizer  } from 'react-big-calendar'\nimport moment from 'moment'\nimport events from './events'\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst localizer = momentLocalizer(moment)\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })\n    \n\nlet MyCalendar = () => {\n  const handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    if (title)\n      this.setState({\n        events: [\n          ...this.state.events,\n          {\n            start,\n            end,\n            title,\n          },\n        ],\n      })\n  }\n  <Calendar\n    events={events}\n    views={allViews}\n    step={60}\n    showMultiDayTimes\n    max={dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours')}\n    defaultDate={new Date(2020, 3, 1)}\n    components={{\n      timeSlotWrapper: ColoredDateCellWrapper,\n    }}\n    localizer={localizer}\n    style={{ height: 500 }}\n\n    selectable\n    onSelectEvent={event => alert(event.title)}\n    onSelectSlot={handleSelect}\n  />\n  }\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}