{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\n// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// const localizer = momentLocalizer(moment)\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n// export default MyCalendar;\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\nimport React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({\n  children\n}) => React.cloneElement(React.Children.only(children), {\n  style: {\n    backgroundColor: 'lightblue'\n  }\n});\n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events);\n\n  const handleSelect = ({\n    start,\n    end\n  }) => {\n    const title = window.prompt('New Event name');\n    debugger;\n    console.log(title);\n    if (!title == '') setevent([...event, {\n      start,\n      end,\n      title\n    }]);\n  };\n\n  const handleModal = props => {\n    const {\n      buttonLabel,\n      className\n    } = props;\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modal,\n      modalTransition: {\n        timeout: 700\n      },\n      backdropTransition: {\n        timeout: 1300\n      },\n      toggle: toggle,\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(Calendar, {\n    events: event,\n    views: allViews,\n    step: 60,\n    showMultiDayTimes: true,\n    max: dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours'),\n    defaultDate: new Date(2020, 3, 1),\n    components: {\n      timeSlotWrapper: ColoredDateCellWrapper\n    },\n    localizer: localizer,\n    style: {\n      height: 500\n    },\n    selectable: true,\n    onSelectEvent: handleModal,\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","useState","Calendar","Views","momentLocalizer","moment","events","dates","Button","Modal","ModalHeader","ModalBody","ModalFooter","allViews","Object","keys","map","k","localizer","ColoredDateCellWrapper","children","cloneElement","Children","only","style","backgroundColor","MyCalendar","event","setevent","handleSelect","start","end","title","window","prompt","console","log","handleModal","props","buttonLabel","className","modal","setModal","toggle","timeout","add","endOf","Date","timeSlotWrapper","height"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment)\n\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\n\n// export default MyCalendar;\n\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\n\n\n\nimport React,{useState} from 'react'\nimport { Calendar, Views, momentLocalizer  } from 'react-big-calendar'\nimport moment from 'moment'\nimport events from './events'\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst localizer = momentLocalizer(moment)\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })\n    \n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events)\n  const handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    debugger\n    console.log(title)\n\n    if (!title=='')\n      setevent([\n          ...event,\n          {\n            start,\n            end,\n            title,\n          },\n        ],\n      )\n  }\n\n  const handleModal = (props) => {\n    const {\n      buttonLabel,\n      className\n    } = props;\n  \n    const [modal, setModal] = useState(false);\n  \n    const toggle = () => setModal(!modal);\n  \n    return (\n      <div>\n        <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\n        <Modal isOpen={modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}\n          toggle={toggle} className={className}>\n          <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <Calendar\n    events={event}\n    views={allViews}\n    step={60}\n    showMultiDayTimes\n    max={dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours')}\n    defaultDate={new Date(2020, 3, 1)}\n    components={{\n      timeSlotWrapper: ColoredDateCellWrapper,\n    }}\n    localizer={localizer}\n    style={{ height: 500 }}\n\n    selectable\n    onSelectEvent={handleModal}\n    onSelectSlot={handleSelect}\n  />\n  )\n  }\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}