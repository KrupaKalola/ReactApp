{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/reactApp/src/Container/CustomCalendar/MyCalendar.js\";\nimport React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport * as dates from '../../../node_modules/react-big-calendar/lib/utils/dates';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({\n  children\n}) => {\n  debugger;\n  console.log(children);\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue'\n    }\n  });\n};\n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events);\n  const [modalCreate, setModalCreate] = useState(false);\n  const [name, setName] = useState('');\n  const [startEvent, setStart] = useState('');\n  const [endEvent, setEnd] = useState('');\n  const [modalShow, setModalShow] = useState(false);\n\n  const toggleCreate = () => {\n    return setModalCreate(!modalCreate);\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n      console.log('name: ', name);\n    } else if (e.target.name === 'start') {\n      setStart(e.target.value);\n      console.log('start: ', e.target.value);\n    } else {\n      setEnd(e.target.value);\n      console.log('end: ', endEvent);\n    }\n  };\n\n  const handleSelect = ({\n    start,\n    end\n  }) => {\n    debugger;\n    setStart(start);\n    setEnd(end);\n    toggleCreate();\n  };\n\n  const createEvent = () => {\n    debugger;\n    const start = startEvent;\n    const end = endEvent;\n    const title = name;\n    if (name) setevent([...event, {\n      start,\n      end,\n      title\n    }]);\n    toggleCreate();\n  };\n\n  const toggleShow = () => {\n    return setModalShow(!modalShow);\n  };\n\n  const showEventDetail = e => {\n    setName(e.title);\n    toggleShow();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    events: event,\n    views: allViews,\n    step: 60,\n    showMultiDayTimes: true,\n    max: dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours'),\n    defaultDate: new Date(2020, 3, 1),\n    components: {\n      timeSlotWrapper: ColoredDateCellWrapper\n    },\n    localizer: localizer,\n    style: {\n      height: 500\n    },\n    selectable: true,\n    onSelectEvent: showEventDetail,\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalCreate,\n    toggle: toggleCreate,\n    className: \"a\",\n    centered: true,\n    style: {\n      maxWidth: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"eventName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Event Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"eventName\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: createEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalShow,\n    toggle: toggleShow,\n    className: \"a\",\n    centered: true,\n    style: {\n      maxWidth: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"You are invited at \", name)), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Ok\"), ' ')));\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/reactApp/src/Container/CustomCalendar/MyCalendar.js"],"names":["React","useState","Calendar","Views","momentLocalizer","moment","events","dates","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","allViews","Object","keys","map","k","localizer","ColoredDateCellWrapper","children","console","log","cloneElement","Children","only","style","backgroundColor","MyCalendar","event","setevent","modalCreate","setModalCreate","name","setName","startEvent","setStart","endEvent","setEnd","modalShow","setModalShow","toggleCreate","handleChange","e","target","value","handleSelect","start","end","createEvent","title","toggleShow","showEventDetail","add","endOf","Date","timeSlotWrapper","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport events from './events'\nimport * as dates from '../../../node_modules/react-big-calendar/lib/utils/dates'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst localizer = momentLocalizer(moment)\n\nconst ColoredDateCellWrapper = ({ children }) => {\n  debugger\n  console.log(children)\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })\n}\n\n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events)\n  const [modalCreate, setModalCreate] = useState(false);\n  const [name, setName] = useState('');\n  const [startEvent, setStart] = useState('');\n  const [endEvent, setEnd] = useState('');\n  const [modalShow, setModalShow] = useState(false);\n\n  const toggleCreate = () => {\n    return (\n      setModalCreate(!modalCreate)\n    )\n  }\n\n  const handleChange = (e) => {\n    if (e.target.name === 'name') {\n      setName(e.target.value)\n      console.log('name: ', name);\n    }\n    else if (e.target.name === 'start') {\n      setStart(e.target.value)\n      console.log('start: ', e.target.value);\n    }\n    else {\n      setEnd(e.target.value)\n      console.log('end: ', endEvent);\n\n    }\n  }\n\n  const handleSelect = ({ start, end }) => {\n    debugger\n    setStart(start)\n    setEnd(end)\n    toggleCreate()\n  }\n\n  const createEvent = () => {\n    debugger\n    const start = startEvent;\n    const end = endEvent;\n    const title = name\n    if (name)\n      setevent([\n        ...event,\n        {\n          start,\n          end,\n          title\n        }\n      ],\n      )\n    toggleCreate()\n  }\n\n  const toggleShow = () => {\n    return (\n      setModalShow(!modalShow)\n    )\n  }\n\n  const showEventDetail=(e)=>{\n    setName(e.title)\n    toggleShow()\n  }\n\n  return (\n    <div>\n      <Calendar\n        events={event}\n        views={allViews}\n        step={60}\n        showMultiDayTimes\n        max={dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours')}\n        defaultDate={new Date(2020, 3, 1)}\n        components={{\n          timeSlotWrapper: ColoredDateCellWrapper,\n        }}\n        localizer={localizer}\n        style={{ height: 500 }}\n\n        selectable={true}\n        onSelectEvent={showEventDetail}\n        onSelectSlot={handleSelect}\n      />\n      {/* ------------------------Create Event Modal------------------------------ */}\n      <Modal isOpen={modalCreate} toggle={toggleCreate} className=\"a\" centered style={{maxWidth:'50%'}}>\n        <ModalHeader toggle={toggleCreate}>Modal title</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"eventName\">Event Name</Label>\n              <Input type=\"text\" name=\"name\" id=\"eventName\" onChange={handleChange} />\n            </FormGroup>\n            {/* <FormGroup>\n              <Label for=\"eventStart\">Start</Label>\n              <Input type=\"date\" name=\"start\" id=\"eventStart\" onChange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"eventEnd\">End</Label>\n              <Input type=\"date\" name=\"end\" id=\"eventEnd\" onChange={handleChange}/>\n            </FormGroup> */}\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={createEvent}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggleCreate}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n\n\n      {/* ----------------------------Show Event Detail -------------------- */}\n      <Modal isOpen={modalShow} toggle={toggleShow} className=\"a\" centered style={{maxWidth:'50%'}}>\n        <ModalHeader toggle={toggleShow}>Modal title</ModalHeader>\n        <ModalBody>\n          <h4>You are invited at {name}</h4>\n            {/* <FormGroup>\n              <Label for=\"eventStart\">Start</Label>\n              <Input type=\"date\" name=\"start\" id=\"eventStart\" onChange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"eventEnd\">End</Label>\n              <Input type=\"date\" name=\"end\" id=\"eventEnd\" onChange={handleChange}/>\n            </FormGroup> */}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleShow}>Ok</Button>{' '}\n        </ModalFooter>\n      </Modal>\n\n\n    </div>\n  )\n}\n\n\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}