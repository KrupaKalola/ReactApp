{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\nimport React from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nconst localizer = momentLocalizer(moment);\n\nhandleSelect = ({\n  start,\n  end\n}) => {\n  const title = window.prompt('New Event name');\n  if (title) this.setState({\n    events: [...this.state.events, {\n      start,\n      end,\n      title\n    }]\n  });\n};\n\nconst MyCalendar = props => {\n  return /*#__PURE__*/React.createElement(Calendar, {\n    localizer: localizer,\n    events: [{\n      'title': 'My event',\n      'allDay': true,\n      'start': new Date(2020, 0, 4, 20, 0),\n      // 10.00 AM\n      'end': new Date(2020, 0, 4, 21, 0) // 2.00 PM \n\n    }],\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    style: {\n      height: 500\n    },\n    onSelectEvent: event => alert(event.title),\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","Calendar","momentLocalizer","moment","localizer","handleSelect","start","end","title","window","prompt","setState","events","state","MyCalendar","props","Date","height","event","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC;;AACAE,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAoB;AACjC,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;AACA,MAAIF,KAAJ,EACE,KAAKG,QAAL,CAAc;AACZC,IAAAA,MAAM,EAAE,CACN,GAAG,KAAKC,KAAL,CAAWD,MADR,EAEN;AACEN,MAAAA,KADF;AAEEC,MAAAA,GAFF;AAGEC,MAAAA;AAHF,KAFM;AADI,GAAd;AAUH,CAbD;;AAcA,MAAMM,UAAU,GAAGC,KAAK,IAAI;AAE1B,sBACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEX,SADb;AAEE,IAAA,MAAM,EAAE,CACN;AACE,eAAS,UADX;AAEE,gBAAU,IAFZ;AAGE,eAAS,IAAIY,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,CAAzB,CAHX;AAGwC;AACtC,aAAO,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,CAAzB,CAJT,CAIsC;;AAJtC,KADM,CAFV;AAUE,IAAA,aAAa,EAAC,OAVhB;AAWE,IAAA,WAAW,EAAC,KAXd;AAYE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAZT;AAaE,IAAA,aAAa,EAAEC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACV,KAAP,CAb/B;AAcE,IAAA,YAAY,EAAEH,YAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkBD,CApBD;;AAsBA,eAAeS,UAAf","sourcesContent":["import React from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment)\nhandleSelect = ({ start, end }) => {\n  const title = window.prompt('New Event name')\n  if (title)\n    this.setState({\n      events: [\n        ...this.state.events,\n        {\n          start,\n          end,\n          title,\n        },\n      ],\n    })\n}\nconst MyCalendar = props => {\n \n  return (\n    <Calendar\n      localizer={localizer}\n      events={[\n        {\n          'title': 'My event',\n          'allDay': true,\n          'start': new Date(2020, 0, 4, 20, 0), // 10.00 AM\n          'end': new Date(2020, 0, 4, 21, 0), // 2.00 PM \n        }\n      ]}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n      onSelectEvent={event => alert(event.title)}\n      onSelectSlot={handleSelect}\n    />\n  )\n}\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}