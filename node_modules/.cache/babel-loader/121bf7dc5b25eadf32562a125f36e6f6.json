{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\n// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// const localizer = momentLocalizer(moment)\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n// export default MyCalendar;\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\nimport React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport EventModal from './EventModal';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({\n  children\n}) => React.cloneElement(React.Children.only(children), {\n  style: {\n    backgroundColor: 'lightblue'\n  }\n});\n\nlet MyCalendar = () => {\n  // const [modal] = useState(true);\n  const [event, setevent] = useState(events);\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [input, setInput] = useState({\n    eventName: '',\n    eventStart: '',\n    eventEnd: ''\n  }); // const eventModal = () => {\n  //   debugger\n  //   return (alert('hello'))\n  // }\n\n  const handleChange = e => {\n    setInput({\n      [e.target.name]: e.target.value\n    });\n    console.log(e.target.value);\n  };\n\n  const handleSelect = ({\n    start,\n    end\n  }) => {\n    toggle(); // const title = window.prompt('New Event Name')\n  };\n\n  const createEvent = ({\n    start,\n    end\n  }) => {\n    debugger;\n    const title = input.eventName;\n    console.log(input.eventName);\n    if (input.eventName) setevent([...event, {\n      start,\n      end,\n      title\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    events: event,\n    views: allViews,\n    step: 60,\n    showMultiDayTimes: true,\n    max: dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours'),\n    defaultDate: new Date(2020, 3, 1),\n    components: {\n      timeSlotWrapper: ColoredDateCellWrapper\n    },\n    localizer: localizer,\n    style: {\n      height: 500\n    },\n    selectable: true,\n    onSelectEvent: event => alert(event.title),\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"eventName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"eventName\",\n    id: \"eventName\",\n    value: input.eventName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"eventStart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"eventStart\",\n    id: \"eventStart\",\n    value: input.eventStart,\n    onchchange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"eventEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"End\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"eventEnd\",\n    id: \"eventEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: createEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","useState","Calendar","Views","momentLocalizer","moment","events","dates","EventModal","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","allViews","Object","keys","map","k","localizer","ColoredDateCellWrapper","children","cloneElement","Children","only","style","backgroundColor","MyCalendar","event","setevent","modal","setModal","toggle","input","setInput","eventName","eventStart","eventEnd","handleChange","e","target","name","value","console","log","handleSelect","start","end","createEvent","title","add","endOf","Date","timeSlotWrapper","height","alert"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment)\n\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\n\n// export default MyCalendar;\n\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\n\n\n\nimport React, { useState } from 'react'\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport events from './events'\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport EventModal from './EventModal'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst localizer = momentLocalizer(moment)\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })\n\n\nlet MyCalendar = () => {\n  // const [modal] = useState(true);\n  const [event, setevent] = useState(events)\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [input, setInput]=useState({eventName:'', eventStart:'', eventEnd:''})\n\n  // const eventModal = () => {\n\n  //   debugger\n  //   return (alert('hello'))\n  // }\n  const handleChange=(e)=>{\n    setInput({[e.target.name]:e.target.value})\n    console.log(e.target.value)\n    \n  }\n  const handleSelect = ({ start, end }) => {\n    toggle()\n    // const title = window.prompt('New Event Name')\n   \n  }\n  const createEvent=({ start, end })=>{\n    debugger\n    const title = input.eventName\n    console.log(input.eventName)\n    if (input.eventName)\n      setevent([\n          ...event,\n          {\n            start,\n            end,\n            title\n          },\n        ],\n      )\n  }\n  return (\n    <div>\n      <Calendar\n        events={event}\n        views={allViews}\n        step={60}\n        showMultiDayTimes\n        max={dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours')}\n        defaultDate={new Date(2020, 3, 1)}\n        components={{\n          timeSlotWrapper: ColoredDateCellWrapper,\n        }}\n        localizer={localizer}\n        style={{ height: 500 }}\n\n        selectable\n        onSelectEvent={event => alert(event.title)}\n        onSelectSlot={handleSelect}\n      />\n      <Modal isOpen={modal} toggle={toggle} className=\"a\">\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"eventName\">Name</Label>\n              <Input type=\"text\" name=\"eventName\" id=\"eventName\" value={input.eventName} onChange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"eventStart\">Start</Label>\n              <Input type=\"date\" name=\"eventStart\" id=\"eventStart\" value={input.eventStart} onchchange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"eventEnd\">End</Label>\n              <Input type=\"date\" name=\"eventEnd\" id=\"eventEnd\" />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={createEvent}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\n\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}