{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/Container/User/index.js\";\n// import React, { Component } from 'react'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faLock,faUser ,faUnlock} from '@fortawesome/free-solid-svg-icons';\n// import './User.css'\n// export default class User extends Component {\n//     state={\n//         username: '',\n//         password: '',\n//         type: \"password\",\n//         icon: faLock,\n//     }\n//     toggleVisibility=()=>{\n//         if(this.state.type===\"password\"){\n//             this.setState({type:\"text\", icon:faUnlock})\n//         }else{\n//             this.setState({type:\"password\", icon:faLock})\n//         }\n//     }\n//     handleChange=(e)=>{\n//         this.setState({[e.target.name]:e.target.value})\n//         console.log(e.target.name)\n//     }\n//     submit=(e)=>{\n//         if(this.state.username!=='' && this.state.password!==''){\n//             const username = this.state.username\n//             console.log(username)\n//             localStorage.setItem('username', username)\n//             return this.props.submitForm\n//         }\n//     }\n//     render() {\n//         const center = {\n//             textAlign: \"center\",\n//             color: \"#fff\",\n//             fontSize: \"25px\"\n//         }\n//         const pos = {\n//             position: \"relative\"\n//         }\n//         return (\n//             <div className=\"mainBg\">\n//                 <img src={process.env.PUBLIC_URL + '/nividata_white-1.png'} alt='logo' style={{width:'165px', marginTop:'20px', marginLeft: '40px'}}/>\n//                 <div className=\"formContainer\">\n//                     <form onSubmit={this.submit(this.props.submitForm)}>\n//                         <h3 style={center}>Sign In</h3>\n//                         {/* <label className=\"formLabel\">User Id</label><br></br> */}\n//                         <div style={pos}>\n//                             <span className=\"icon\">\n//                             <FontAwesomeIcon icon={faUser} className=\"icon-user\"/>\n//                             </span>\n//                             <input className=\"inputField paddingLeft\" type=\"text\" name='username' value={this.state.username} placeholder=\"Username\" autoComplete=\"off\" onChange={this.handleChange}></input>\n//                         </div>\n//                         <br />\n//                         {/* <label className=\"formLabel\">Password</label><br></br> */}\n//                        <div style={pos}>\n//                        <span className=\"icon1\">\n//                                 <FontAwesomeIcon icon={this.state.icon} className=\"icon-user\" onClick={this.toggleVisibility}/>\n//                             </span>\n//                         <input className=\"inputField\" type={this.state.type} name='password' value={this.state.password} placeholder=\"Password\" onChange={this.handleChange}></input>\n//                        </div>\n//                         <br />\n//                         <input className=\"btn\" type=\"submit\" value=\"Login\"></input>\n//                     </form>\n//                     <p className=\"register\">New User?<a href=\"./user\">  Register</a></p>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faUser, faUnlock } from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\n\nfunction User() {\n  const [pwdType, setPwdType] = useState('password');\n  const [pwdIcon, setPwdIcon] = useState(faLock); // ////////////////////Inline css////////////////////////////////////\n\n  const center = {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: \"25px\"\n  };\n  const pos = {\n    position: \"relative\"\n  }; //////////////////////Toggle Password visibility///////////////\n\n  const toggleVisibility = () => {\n    if (pwdType === \"password\") {\n      setPwdType('text');\n      setPwdIcon(faUnlock);\n    } else {\n      setPwdType('password');\n      setPwdIcon(faLock);\n    }\n  };\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); /////////////////////////Submit Method/////////////////\n\n  const onSubmit = data => {\n    const uname = data.username;\n    console.log(uname);\n    localStorage.setItem('uname', uname);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainBg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: process.env.PUBLIC_URL + '/nividata_white-1.png',\n    alt: \"logo\",\n    style: {\n      width: '165px',\n      marginTop: '20px',\n      marginLeft: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: pos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUser,\n    className: \"icon-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputField paddingLeft\",\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    autoComplete: \"off\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }), errors.username && errors.username.type === 'minLength' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 81\n    }\n  }, \"Username length must be atleast 2 characters\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: pos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: pwdIcon,\n    className: \"icon-user\",\n    onClick: toggleVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputField\",\n    type: pwdType,\n    name: \"password\",\n    placeholder: \"Password\",\n    ref: register({\n      required: true,\n      minLength: 6\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), errors.password && errors.password.type === 'minLength' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 80\n    }\n  }, \"Password length must be atleast 6 characters\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn\",\n    type: \"submit\",\n    value: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"New User?\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"./user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 46\n    }\n  }, \"  Register\"))));\n}\n\nexport default User;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/Container/User/index.js"],"names":["React","useState","useForm","FontAwesomeIcon","faLock","faUser","faUnlock","User","pwdType","setPwdType","pwdIcon","setPwdIcon","center","textAlign","color","fontSize","pos","position","toggleVisibility","register","handleSubmit","errors","onSubmit","data","uname","username","console","log","localStorage","setItem","process","env","PUBLIC_URL","width","marginTop","marginLeft","required","minLength","type","password"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,QAAyC,mCAAzC;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,GAAgB;AAEZ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBR,QAAQ,CAAC,UAAD,CAArC;AACA,QAAM,CAACS,OAAD,EAAWC,UAAX,IAAwBV,QAAQ,CAACG,MAAD,CAAtC,CAHY,CAKZ;;AACA,QAAMQ,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAf;AAKA,QAAMC,GAAG,GAAG;AACRC,IAAAA,QAAQ,EAAE;AADF,GAAZ,CAXY,CAeZ;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAIV,OAAO,KAAK,UAAhB,EAA4B;AACxBC,MAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,MAAAA,UAAU,CAACL,QAAD,CAAV;AAEH,KAJD,MAIO;AACHG,MAAAA,UAAU,CAAC,UAAD,CAAV;AACAE,MAAAA,UAAU,CAACP,MAAD,CAAV;AACH;AACJ,GATD;;AAYA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCnB,OAAO,EAAlD,CA5BY,CA8BZ;;AACA,QAAMoB,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAMC,KAAK,GAAGD,IAAI,CAACE,QAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,KAA9B;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,GAAG,EAAEM,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,uBAAnC;AAA4D,IAAA,GAAG,EAAC,MAAhE;AAAuE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,SAAS,EAAE,MAA7B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEf,YAAY,CAACE,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAEV,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,IAAA,KAAK,EAAEI,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEX,MAAvB;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAO,IAAA,SAAS,EAAC,wBAAjB;AAA0C,IAAA,IAAI,EAAC,MAA/C;AAAsD,IAAA,IAAI,EAAC,UAA3D;AAAsE,IAAA,WAAW,EAAC,UAAlF;AAA6F,IAAA,YAAY,EAAC,KAA1G;AAAgH,IAAA,GAAG,EAAEc,QAAQ,CAAC;AAAEiB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKhB,MAAM,CAACI,QAAP,IAAmBJ,MAAM,CAACI,QAAP,CAAgBa,IAAhB,KAAyB,WAA5C,iBAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDALhE,CAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI;AAAK,IAAA,KAAK,EAAEtB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,OAAvB;AAAgC,IAAA,SAAS,EAAC,WAA1C;AAAsD,IAAA,OAAO,EAAEQ,gBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAEV,OAApC;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAA6D,IAAA,WAAW,EAAC,UAAzE;AAAoF,IAAA,GAAG,EAAEW,QAAQ,CAAC;AAAEiB,MAAAA,QAAQ,EAAE,IAAZ;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKhB,MAAM,CAACkB,QAAP,IAAmBlB,MAAM,CAACkB,QAAP,CAAgBD,IAAhB,KAAwB,WAA3C,iBAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAL/D,CAXJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,eAoBI;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ,eAuBI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAiC;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjC,CAvBJ,CAFA,CADJ;AA8BH;;AAED,eAAe/B,IAAf","sourcesContent":["// import React, { Component } from 'react'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faLock,faUser ,faUnlock} from '@fortawesome/free-solid-svg-icons';\n// import './User.css'\n\n// export default class User extends Component {\n//     state={\n//         username: '',\n//         password: '',\n//         type: \"password\",\n//         icon: faLock,\n        \n//     }\n//     toggleVisibility=()=>{\n//         if(this.state.type===\"password\"){\n//             this.setState({type:\"text\", icon:faUnlock})\n\n//         }else{\n//             this.setState({type:\"password\", icon:faLock})\n//         }\n//     }\n//     handleChange=(e)=>{\n//         this.setState({[e.target.name]:e.target.value})\n//         console.log(e.target.name)\n//     }\n//     submit=(e)=>{\n       \n//         if(this.state.username!=='' && this.state.password!==''){\n//             const username = this.state.username\n//             console.log(username)\n//             localStorage.setItem('username', username)\n//             return this.props.submitForm\n//         }\n//     }\n//     render() {\n       \n//         const center = {\n//             textAlign: \"center\",\n//             color: \"#fff\",\n//             fontSize: \"25px\"\n//         }\n//         const pos = {\n//             position: \"relative\"\n//         }\n//         return (\n//             <div className=\"mainBg\">\n//                 <img src={process.env.PUBLIC_URL + '/nividata_white-1.png'} alt='logo' style={{width:'165px', marginTop:'20px', marginLeft: '40px'}}/>\n//                 <div className=\"formContainer\">\n//                     <form onSubmit={this.submit(this.props.submitForm)}>\n//                         <h3 style={center}>Sign In</h3>\n//                         {/* <label className=\"formLabel\">User Id</label><br></br> */}\n//                         <div style={pos}>\n//                             <span className=\"icon\">\n//                             <FontAwesomeIcon icon={faUser} className=\"icon-user\"/>\n//                             </span>\n//                             <input className=\"inputField paddingLeft\" type=\"text\" name='username' value={this.state.username} placeholder=\"Username\" autoComplete=\"off\" onChange={this.handleChange}></input>\n//                         </div>\n//                         <br />\n//                         {/* <label className=\"formLabel\">Password</label><br></br> */}\n//                        <div style={pos}>\n//                        <span className=\"icon1\">\n//                                 <FontAwesomeIcon icon={this.state.icon} className=\"icon-user\" onClick={this.toggleVisibility}/>\n//                             </span>\n//                         <input className=\"inputField\" type={this.state.type} name='password' value={this.state.password} placeholder=\"Password\" onChange={this.handleChange}></input>\n//                        </div>\n//                         <br />\n//                         <input className=\"btn\" type=\"submit\" value=\"Login\"></input>\n//                     </form>\n//                     <p className=\"register\">New User?<a href=\"./user\">  Register</a></p>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\n\n\nimport React,{useState} from 'react'\nimport { useForm } from 'react-hook-form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock, faUser, faUnlock } from '@fortawesome/free-solid-svg-icons';\nimport './User.css'\n\nfunction User() {\n\n    const [pwdType, setPwdType]= useState('password')\n    const [pwdIcon , setPwdIcon]= useState(faLock)\n\n    // ////////////////////Inline css////////////////////////////////////\n    const center = {\n        textAlign: \"center\",\n        color: \"#fff\",\n        fontSize: \"25px\"\n    }\n    const pos = {\n        position: \"relative\"\n    }\n\n    //////////////////////Toggle Password visibility///////////////\n    const toggleVisibility = () => {\n        if (pwdType === \"password\") {\n            setPwdType('text')\n            setPwdIcon(faUnlock)\n\n        } else {\n            setPwdType('password')\n            setPwdIcon(faLock)\n        }\n    }\n\n\n    const { register, handleSubmit, errors } = useForm();\n\n    /////////////////////////Submit Method/////////////////\n    const onSubmit = (data) => {\n        const uname = data.username;\n        console.log(uname)\n        localStorage.setItem('uname', uname)\n    }\n    return (\n        <div className=\"mainBg\">\n        <img src={process.env.PUBLIC_URL + '/nividata_white-1.png'} alt='logo' style={{ width: '165px', marginTop: '20px', marginLeft: '40px' }} />\n        <div className=\"formContainer\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <h3 style={center}>Sign In</h3>\n                <div style={pos}>\n                    <span className=\"icon\">\n                        <FontAwesomeIcon icon={faUser} className=\"icon-user\" />\n                    </span>\n                    <input className=\"inputField paddingLeft\" type=\"text\" name='username' placeholder=\"Username\" autoComplete=\"off\" ref={register({ required: true, minLength: 2 })}></input>\n                    {errors.username && errors.username.type === 'minLength' && <p>Username length must be atleast 2 characters</p>}\n\n                </div>\n                <br />\n                <div style={pos}>\n                    <span className=\"icon1\">\n                        <FontAwesomeIcon icon={pwdIcon} className=\"icon-user\" onClick={toggleVisibility} />\n                    </span>\n                    <input className=\"inputField\" type={pwdType} name='password' placeholder=\"Password\" ref={register({ required: true , minLength: 6})}></input>\n                    {errors.password && errors.password.type=== 'minLength' && <p>Password length must be atleast 6 characters</p>}\n\n                </div>\n                <br />\n                <input className=\"btn\" type=\"submit\" value=\"Login\"></input>\n            </form>\n            <p className=\"register\">New User?<a href=\"./user\">  Register</a></p>\n        </div>\n    </div>\n    )\n}\n\nexport default User;"]},"metadata":{},"sourceType":"module"}