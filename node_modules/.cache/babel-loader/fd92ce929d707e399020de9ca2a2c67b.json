{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\n// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// const localizer = momentLocalizer(moment)\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n// export default MyCalendar;\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\nimport React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport EventModal from './EventModal';\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst ColoredDateCellWrapper = ({\n  children\n}) => React.cloneElement(React.Children.only(children), {\n  style: {\n    backgroundColor: 'lightblue'\n  }\n});\n\nlet MyCalendar = () => {\n  const [event, setevent] = useState(events); //  const eventModal =()=>{\n  //    debugger\n  //    return <EventModal/>\n  //  }\n  // const handleSelect = ({ start, end }) => {\n  //   debugger\n  //   if (true)\n  //     setevent([\n  //         ...event,\n  //         {\n  //           start,\n  //           end,\n  //         },\n  //       ],\n  //     )\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    events: event,\n    views: allViews,\n    step: 60,\n    showMultiDayTimes: true,\n    max: dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours'),\n    defaultDate: new Date(2020, 3, 1),\n    components: {\n      timeSlotWrapper: ColoredDateCellWrapper\n    },\n    localizer: localizer,\n    style: {\n      height: 500\n    },\n    selectable: true,\n    onSelectEvent: event => alert(event.title),\n    onSelectSlot: () => {\n      setModal(!modal);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EventModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","useState","Calendar","Views","momentLocalizer","moment","events","dates","EventModal","allViews","Object","keys","map","k","localizer","ColoredDateCellWrapper","children","cloneElement","Children","only","style","backgroundColor","MyCalendar","event","setevent","add","endOf","Date","timeSlotWrapper","height","alert","title","setModal","modal"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,eAA1B,QAAkD,oBAAlD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,oDAAvB;AACA,OAAO,mDAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,GAAnB,CAAuBC,CAAC,IAAIV,KAAK,CAACU,CAAD,CAAjC,CAAf;AAEA,MAAMC,SAAS,GAAGV,eAAe,CAACC,MAAD,CAAjC;;AAEA,MAAMU,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC7BhB,KAAK,CAACiB,YAAN,CAAmBjB,KAAK,CAACkB,QAAN,CAAeC,IAAf,CAAoBH,QAApB,CAAnB,EAAkD;AAChDI,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE;AADZ;AADyC,CAAlD,CADF;;AAQA,IAAIC,UAAU,GAAG,MAAM;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAACK,MAAD,CAAlC,CAFqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACF,IAAA,MAAM,EAAEiB,KADN;AAEF,IAAA,KAAK,EAAEd,QAFL;AAGF,IAAA,IAAI,EAAE,EAHJ;AAIF,IAAA,iBAAiB,MAJf;AAKF,IAAA,GAAG,EAAEF,KAAK,CAACkB,GAAN,CAAUlB,KAAK,CAACmB,KAAN,CAAY,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,KAAlC,CAAV,EAAoD,CAAC,CAArD,EAAwD,OAAxD,CALH;AAMF,IAAA,WAAW,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CANX;AAOF,IAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAEb;AADP,KAPV;AAUF,IAAA,SAAS,EAAED,SAVT;AAWF,IAAA,KAAK,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAV,KAXL;AAaF,IAAA,UAAU,MAbR;AAcF,IAAA,aAAa,EAAEN,KAAK,IAAIO,KAAK,CAACP,KAAK,CAACQ,KAAP,CAd3B;AAeF,IAAA,YAAY,EAAE,MAAI;AAACC,MAAAA,QAAQ,CAAC,CAACC,KAAF,CAAR;AAAiB,KAflC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAkBF,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBE,CADF;AAsBC,CA1CH;;AA8CA,eAAeX,UAAf","sourcesContent":["// import React, { Component } from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// const localizer = momentLocalizer(moment)\n\n// export class MyCalendar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//         eventObj: {}\n//     };\n// }\n\n//   state = {}\n//   handleSelect = (e) => {\n//     console.log(e)\n//     const title = window.prompt('New Event name')\n//     if (title) {\n//       console.log(title)\n//       // const eventData = {\n//       //   'title': title,\n//       //   'allDay': true,\n//       //   'start': '',\n//       //   'end': ''\n//       // }\n//       // this.setState({\n//       //   eventObj: eventData\n//       // })\n//     }\n\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           selectable\n//           localizer={localizer}\n//           events={[\n//             {\n//               'title': 'Long Event',\n//               'start': new Date(2020, 4, 7),\n//               'end': new Date(2020, 4, 10)\n//             }\n//           ]}\n//           startAccessor=\"start\"\n//           endAccessor=\"end\"\n//           style={{ height: 500 }}\n//           onSelectSlot={this.handleSelect}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\n\n// export default MyCalendar;\n\n// import React from 'react'\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\n// import moment from 'moment'\n// import 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// const localizer = momentLocalizer(moment)\n// const myEventsList=[\n//     {\n//       title:'Event 1',\n//       start:'new Date(2020, 04 , 22)',\n//       end:'new Date(2020, 04 , 23)',\n//     },\n//     {\n//       title:'Event 2',\n//       start:'new Date(2020, 04, 23)',\n//       end:'new Date(2020, 04 ,24)',\n//     }\n//   ]\n\n// const MyCalendar = props => (\n//   <div>\n//     <Calendar\n//       localizer={localizer}\n//       events={myEventsList}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//     />\n//   </div>\n// )\n\n\n\nimport React,{useState} from 'react'\nimport { Calendar, Views, momentLocalizer  } from 'react-big-calendar'\nimport moment from 'moment'\nimport events from './events'\nimport * as dates from '../node_modules/react-big-calendar/lib/utils/dates'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport EventModal from './EventModal'\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst localizer = momentLocalizer(moment)\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })\n    \n\nlet MyCalendar = () => {\n  \n  const [event, setevent] = useState(events)\n  //  const eventModal =()=>{\n  //    debugger\n  //    return <EventModal/>\n  //  }\n  // const handleSelect = ({ start, end }) => {\n  //   debugger\n\n  //   if (true)\n  //     setevent([\n  //         ...event,\n  //         {\n  //           start,\n  //           end,\n  //         },\n  //       ],\n  //     )\n  // }\n  return (\n    <div>\n      <Calendar\n    events={event}\n    views={allViews}\n    step={60}\n    showMultiDayTimes\n    max={dates.add(dates.endOf(new Date(2020, 3, 1), 'day'), -1, 'hours')}\n    defaultDate={new Date(2020, 3, 1)}\n    components={{\n      timeSlotWrapper: ColoredDateCellWrapper,\n    }}\n    localizer={localizer}\n    style={{ height: 500 }}\n\n    selectable\n    onSelectEvent={event => alert(event.title)}\n    onSelectSlot={()=>{setModal(!modal)}}\n  />\n  <EventModal/>\n    </div>\n  )\n  }\n\n  \n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}