{"ast":null,"code":"var _jsxFileName = \"/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js\";\nimport React, { Component } from 'react';\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nconst localizer = momentLocalizer(moment);\nexport class MyCalendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = ({\n      start,\n      end\n    }) => {\n      const title = window.prompt('Enter Event name');\n\n      if (title) {\n        // console.log(title)\n        this.setState({\n          eventObj: [...this.state.event, {\n            start,\n            end,\n            title\n          }]\n        });\n        const eventData = {\n          'title': title,\n          'allDay': true,\n          'start': '',\n          'end': '',\n          'action': ''\n        };\n        this.setState({\n          eventObj: eventData\n        });\n      }\n    };\n\n    this.ColoredDateCellWrapper = ({\n      children\n    }) => {\n      React.cloneElement(React.Children.only(children), {\n        style: {\n          backgroundColor: 'lightblue'\n        }\n      });\n    };\n\n    this.state = {\n      eventObj: {}\n    };\n  }\n\n  render() {\n    const allViews = Object.keys(Views).map(k => Views[k]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      selectable: true,\n      localizer: localizer,\n      events: [{\n        'title': 'Long Event',\n        'start': new Date(2020, 4, 27),\n        'end': new Date(2020, 4, 28)\n      }],\n      titleAccessor: \"\",\n      views: allViews,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectSlot: this.handleSelect,\n      showMultiDayTimes: true,\n      components: {\n        timeSlotWrapper: this.ColoredDateCellWrapper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default MyCalendar;","map":{"version":3,"sources":["/home/nividata-krupa/workspace/ReactJS/my-first-app/src/MyCalendar.js"],"names":["React","Component","Calendar","momentLocalizer","Views","moment","localizer","MyCalendar","constructor","props","handleSelect","start","end","title","window","prompt","setState","eventObj","state","event","eventData","ColoredDateCellWrapper","children","cloneElement","Children","only","style","backgroundColor","render","allViews","Object","keys","map","k","Date","height","timeSlotWrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,KAApC,QAAiD,oBAAjD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGH,eAAe,CAACE,MAAD,CAAjC;AAEA,OAAO,MAAME,UAAN,SAAyBN,SAAzB,CAAmC;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOJ,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAkB;AAC/B,YAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,kBAAd,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACT;AACA,aAAKG,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,CACR,GAAG,KAAKC,KAAL,CAAWC,KADN,EAGR;AACER,YAAAA,KADF;AAEEC,YAAAA,GAFF;AAGEC,YAAAA;AAHF,WAHQ;AADE,SAAd;AAWA,cAAMO,SAAS,GAAG;AAChB,mBAASP,KADO;AAEhB,oBAAU,IAFM;AAGhB,mBAAS,EAHO;AAIhB,iBAAO,EAJS;AAKhB,oBAAU;AALM,SAAlB;AAOA,aAAKG,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAEG;AADE,SAAd;AAGD;AAEF,KAlCkB;;AAAA,SAmCnBC,sBAnCmB,GAmCM,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACzCtB,MAAAA,KAAK,CAACuB,YAAN,CAAmBvB,KAAK,CAACwB,QAAN,CAAeC,IAAf,CAAoBH,QAApB,CAAnB,EAAkD;AAChDI,QAAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE;AADZ;AADyC,OAAlD;AAKD,KAzCkB;;AAEjB,SAAKT,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAqCDW,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY3B,KAAZ,EAAmB4B,GAAnB,CAAuBC,CAAC,IAAI7B,KAAK,CAAC6B,CAAD,CAAjC,CAAjB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAE3B,SAFb;AAGE,MAAA,MAAM,EAAE,CACN;AACE,iBAAS,YADX;AAEE,iBAAS,IAAI4B,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAFX;AAGE,eAAO,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHT,OADM,CAHV;AAUE,MAAA,aAAa,EAAC,EAVhB;AAWE,MAAA,KAAK,EAAEL,QAXT;AAYE,MAAA,aAAa,EAAC,OAZhB;AAaE,MAAA,WAAW,EAAC,KAbd;AAcE,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAdT;AAeE,MAAA,YAAY,EAAE,KAAKzB,YAfrB;AAiBE,MAAA,iBAAiB,MAjBnB;AAkBE,MAAA,UAAU,EAAE;AACV0B,QAAAA,eAAe,EAAE,KAAKf;AADZ,OAlBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA0BD;;AAxEuC;AA4E1C,eAAed,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment)\n\nexport class MyCalendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventObj: {}\n    };\n  }\n\n  handleSelect = ({start, end}) => {\n    const title = window.prompt('Enter Event name')\n    if (title) {\n      // console.log(title)\n      this.setState({\n        eventObj: [\n          ...this.state.event,\n\n          {\n            start,\n            end,\n            title\n          }\n        ]\n      })\n      const eventData = {\n        'title': title,\n        'allDay': true,\n        'start': '',\n        'end': '',\n        'action': ''\n      }\n      this.setState({\n        eventObj: eventData\n      })\n    }\n\n  }\n  ColoredDateCellWrapper = ({ children }) => {\n    React.cloneElement(React.Children.only(children), {\n      style: {\n        backgroundColor: 'lightblue',\n      },\n    })\n  }\n  render() {\n    const allViews = Object.keys(Views).map(k => Views[k])\n\n    return (\n      <div>\n        <Calendar\n          selectable\n          localizer={localizer}\n          events={[\n            {\n              'title': 'Long Event',\n              'start': new Date(2020, 4, 27),\n              'end': new Date(2020, 4, 28)\n            }\n          ]}\n          titleAccessor=\"\"\n          views={allViews}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500 }}\n          onSelectSlot={this.handleSelect}\n\n          showMultiDayTimes\n          components={{\n            timeSlotWrapper: this.ColoredDateCellWrapper,\n          }}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}